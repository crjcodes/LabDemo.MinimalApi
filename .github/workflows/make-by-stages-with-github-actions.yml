# Barebones of continuous integration in stages

# Much, much room for optimization and bringing closer to the real world

name: LabDemo.MinimalApi.BuildByStages
run-name: ${{ github.actor }} is experimenting with GitHub actions 🚀
on: [push]

env:
    SOLUTION: LabDemo.MinimalApi
    PROJECT: LabDemo.MinimalApi

jobs:

  ##============================================================
  ##  BUILD STAGE

  build:
    name: Build the API

    # Use the Bash shell regardless whether the GitHub Actions runner is ubuntu-latest, macos-latest, or windows-latest
    defaults:
      run:
        shell: bash

    runs-on: ubuntu-latest
    strategy:
      matrix:
        dotnet-version: ['7.x.x' ]

    steps:       
    - name: Checkout
      uses: actions/checkout@v3
      #with:
      #  fetch-depth: 0
      #  submodules: recursive

    # TODO: only for debug
    - name: Setup .NET Core SDK ${{ matrix.dotnet-version }}
      uses: actions/setup-dotnet@v3
      with:
        dotnet-version: ${{ matrix.dotnet-version }}

    - name: Before
      working-directory: .
      run: |
        echo "SOLUTION = $SOLUTION"
        echo "PROJECT = $PROJECT"
        echo "Total solution storage consumption before job for ${PWD}:" 
        du -sh ./*

    - name: Build the project
      run: |        
        cd $PROJECT
        dotnet restore --packages ..\nuget
        dotnet build -c Release --no-incremental --no-restore --source ..\nuget -o ..\build

    - name: TODO-cache-dependencies
      id: cache-nuget-dependencies
      uses: actions/cache@v3
      env:
        cache_name: cache-node-modules
      with:
        path: ./nuget
        key: ${{ runner.os }}-build-${{ env.cache-name }}-${{ hashFiles('**/package-lock.json') }}
        restore-keys: |
          ${{ runner.os }}-build-${{ env.cache-name }}-
          ${{ runner.os }}-build-
          ${{ runner.os }}-

    - name: TODO-cache-dependencies
      run: echo "TODO cache build"

    - name: After
      run: |
        echo "Total solution storage consumption before job for ${PWD}:" 
        du -sh ./*
        
  #============================================================
  #  TEST STAGE

  test:
    name: Black-box test the API

    # Use the Bash shell regardless whether the GitHub Actions runner is ubuntu-latest, macos-latest, or windows-latest
    defaults:
      run:
        shell: bash
        working-directory: .

    runs-on: ubuntu-latest

    strategy:
      matrix:
        dotnet-version: ['7.x.x' ]

    needs: [build]    
    
    env:
      TEST_PROJECT: LabDemo.MinimalApi.Tests

    steps:

    - name: Checkout
      uses: actions/checkout@v3
      #with:
      #  fetch-depth: 0
      
    # TODO: only for debug
    - name: Setup .NET Core SDK ${{ matrix.dotnet-version }}
      uses: actions/setup-dotnet@v3
      with:
        dotnet-version: ${{ matrix.dotnet-version }}

    - name: Before
      run: |
        echo "SOLUTION = $SOLUTION"
        echo "TEST_PROJECT = $TEST_PROJECT"
        echo "Running in ${PWD}"
        echo "Total solution storage consumption before job for ${PWD}:" 
        du -sh ./*

    - name: Run the black box tests
      run: |
        cd $TEST_PROJECT
        dotnet test

    - name: After
      run: |
        echo "Total solution storage consumption before job for ${PWD}:" 
        du -sh ./*
